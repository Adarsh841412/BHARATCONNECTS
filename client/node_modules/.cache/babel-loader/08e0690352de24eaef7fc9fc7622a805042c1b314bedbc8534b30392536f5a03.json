{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adars\\\\MASTERCSS\\\\quick-chat-app\\\\client\\\\src\\\\pages\\\\home\\\\components\\\\userList.js\",\n  _s = $RefreshSig$();\nimport toast from \"react-hot-toast\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createNewChat } from './../../../apiCalls/chat';\nimport { hideLoader, showLoader } from \"../../../redux/loaderSlice\";\nimport { setAllChats, setSelectedChat } from './../../../redux/usersSlice';\nimport moment from \"moment\";\nimport { useEffect } from \"react\";\nimport store from \"../../../redux/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UsersList({\n  searchKey,\n  socket,\n  onlineUser\n}) {\n  _s();\n  const {\n    allUsers,\n    allChats,\n    user: currentUser,\n    selectedChat\n  } = useSelector(state => state.userReducer);\n  const dispatch = useDispatch();\n  const startNewChat = async searchedUserId => {\n    let response = null;\n    try {\n      dispatch(showLoader());\n      response = await createNewChat([currentUser._id, searchedUserId]);\n      dispatch(hideLoader());\n      if (response.success) {\n        toast.success(response.message);\n        const newChat = response.data;\n        const updatedChat = [...allChats, newChat];\n        dispatch(setAllChats(updatedChat));\n        dispatch(setSelectedChat(newChat));\n      }\n    } catch (error) {\n      var _response;\n      toast.error(((_response = response) === null || _response === void 0 ? void 0 : _response.message) || \"Something went wrong\");\n      dispatch(hideLoader());\n    }\n  };\n  const openChat = selectedUserId => {\n    const chat = allChats === null || allChats === void 0 ? void 0 : allChats.find(chat => {\n      var _chat$members, _chat$members2;\n      return (chat === null || chat === void 0 ? void 0 : (_chat$members = chat.members) === null || _chat$members === void 0 ? void 0 : _chat$members.map(m => m._id).includes(currentUser._id)) && (chat === null || chat === void 0 ? void 0 : (_chat$members2 = chat.members) === null || _chat$members2 === void 0 ? void 0 : _chat$members2.map(m => m._id).includes(selectedUserId));\n    });\n    if (chat) {\n      dispatch(setSelectedChat(chat));\n    }\n  };\n  const IsSelectedChat = user => {\n    if (selectedChat) {\n      var _selectedChat$members;\n      return selectedChat === null || selectedChat === void 0 ? void 0 : (_selectedChat$members = selectedChat.members) === null || _selectedChat$members === void 0 ? void 0 : _selectedChat$members.map(m => m._id).includes(user === null || user === void 0 ? void 0 : user._id);\n    }\n    return false;\n  };\n  const getLastMessageTimeStamp = userId => {\n    const chat = allChats === null || allChats === void 0 ? void 0 : allChats.find(chat => {\n      var _chat$members3;\n      return chat === null || chat === void 0 ? void 0 : (_chat$members3 = chat.members) === null || _chat$members3 === void 0 ? void 0 : _chat$members3.map(m => m._id).includes(userId);\n    });\n    if (!chat || !(chat !== null && chat !== void 0 && chat.lastMessage)) {\n      return \"\";\n    } else {\n      var _chat$lastMessage;\n      return moment(chat === null || chat === void 0 ? void 0 : (_chat$lastMessage = chat.lastMessage) === null || _chat$lastMessage === void 0 ? void 0 : _chat$lastMessage.createdAt).format('hh:mm A');\n    }\n  };\n  const getlastMessage = userId => {\n    const chat = allChats === null || allChats === void 0 ? void 0 : allChats.find(chat => {\n      var _chat$members4;\n      return chat === null || chat === void 0 ? void 0 : (_chat$members4 = chat.members) === null || _chat$members4 === void 0 ? void 0 : _chat$members4.map(m => m._id).includes(userId);\n    });\n    if (!chat || !chat.lastMessage) {\n      return \"\";\n    } else {\n      var _chat$lastMessage2, _chat$lastMessage3, _chat$lastMessage3$te;\n      const msgPrefix = (chat === null || chat === void 0 ? void 0 : (_chat$lastMessage2 = chat.lastMessage) === null || _chat$lastMessage2 === void 0 ? void 0 : _chat$lastMessage2.sender) === currentUser._id ? \"You: \" : \"\";\n      return msgPrefix + (chat === null || chat === void 0 ? void 0 : (_chat$lastMessage3 = chat.lastMessage) === null || _chat$lastMessage3 === void 0 ? void 0 : (_chat$lastMessage3$te = _chat$lastMessage3.text) === null || _chat$lastMessage3$te === void 0 ? void 0 : _chat$lastMessage3$te.substring(0, 25));\n    }\n  };\n  function formatName(user) {\n    var _user$lastname, _user$lastname$at, _user$lastname2, _user$lastname2$slice;\n    if (!user || !user.firstname) return \"\";\n    let fname = user.firstname.at(0).toUpperCase() + user.firstname.slice(1).toLowerCase();\n    let lname = ((_user$lastname = user.lastname) === null || _user$lastname === void 0 ? void 0 : (_user$lastname$at = _user$lastname.at(0)) === null || _user$lastname$at === void 0 ? void 0 : _user$lastname$at.toUpperCase()) + ((_user$lastname2 = user.lastname) === null || _user$lastname2 === void 0 ? void 0 : (_user$lastname2$slice = _user$lastname2.slice(1)) === null || _user$lastname2$slice === void 0 ? void 0 : _user$lastname2$slice.toLowerCase());\n    return fname + ' ' + (lname || '');\n  }\n  useEffect(() => {\n    socket.off('set-message-count').on('set-message-count', message => {\n      var _allChats, _allChats2;\n      const selectedChat = store.getState().userReducer.selectedChat;\n      let allChats = store.getState().userReducer.allChats;\n      if ((selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat._id) !== message.chatId) {\n        const updatedchats = allChats.map(chat => {\n          if ((chat === null || chat === void 0 ? void 0 : chat._id) === message.chatId) {\n            return {\n              ...chat,\n              unreadMessageCount: ((chat === null || chat === void 0 ? void 0 : chat.unreadMessageCount) || 0) + 1,\n              lastMessage: message\n            };\n          }\n          return chat;\n        });\n        allChats = updatedchats;\n      }\n      const latestChat = (_allChats = allChats) === null || _allChats === void 0 ? void 0 : _allChats.find(chat => (chat === null || chat === void 0 ? void 0 : chat._id) === message.chatId);\n      const otherChats = (_allChats2 = allChats) === null || _allChats2 === void 0 ? void 0 : _allChats2.filter(chat => (chat === null || chat === void 0 ? void 0 : chat._id) !== message.chatId);\n      allChats = [latestChat, ...otherChats].filter(Boolean);\n      dispatch(setAllChats(allChats));\n    });\n  }, []);\n  const getUnreadMessageCount = userId => {\n    var _chat$lastMessage4;\n    const chat = allChats === null || allChats === void 0 ? void 0 : allChats.find(chat => {\n      var _chat$members5;\n      return chat === null || chat === void 0 ? void 0 : (_chat$members5 = chat.members) === null || _chat$members5 === void 0 ? void 0 : _chat$members5.map(m => m._id).includes(userId);\n    });\n    if (chat && chat.unreadMessageCount && ((_chat$lastMessage4 = chat.lastMessage) === null || _chat$lastMessage4 === void 0 ? void 0 : _chat$lastMessage4.sender) !== currentUser._id) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unread-message-counter\",\n        children: [\" \", chat.unreadMessageCount, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 14\n      }, this);\n    } else {\n      return \"\";\n    }\n  };\n  function getData() {\n    if (searchKey === \"\") {\n      return allChats || [];\n    } else {\n      return (allUsers === null || allUsers === void 0 ? void 0 : allUsers.filter(user => {\n        var _user$firstname, _user$lastname3;\n        return (user === null || user === void 0 ? void 0 : (_user$firstname = user.firstname) === null || _user$firstname === void 0 ? void 0 : _user$firstname.toLowerCase().includes(searchKey === null || searchKey === void 0 ? void 0 : searchKey.toLowerCase())) || (user === null || user === void 0 ? void 0 : (_user$lastname3 = user.lastname) === null || _user$lastname3 === void 0 ? void 0 : _user$lastname3.toLowerCase().includes(searchKey === null || searchKey === void 0 ? void 0 : searchKey.toLowerCase()));\n      })) || [];\n    }\n  }\n  return getData().map(obj => {\n    var _user, _user2, _user3, _user4, _user5, _user6, _user6$firstname, _user6$firstname$char, _user7, _user7$lastname, _user7$lastname$charA;\n    let user = obj;\n    if (obj !== null && obj !== void 0 && obj.members) {\n      user = obj.members.find(mem => mem._id !== currentUser._id);\n    }\n    if (!user) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-search-filter\",\n      onClick: () => openChat(user._id),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: IsSelectedChat(user) ? \"selected-user\" : \"filtered-user\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-user-display\",\n          children: [((_user = user) === null || _user === void 0 ? void 0 : _user.profilePic) && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: (_user2 = user) === null || _user2 === void 0 ? void 0 : _user2.profilePic,\n            alt: \"Profile Pic\",\n            className: \"user-profile-image\",\n            style: onlineUser !== null && onlineUser !== void 0 && onlineUser.includes((_user3 = user) === null || _user3 === void 0 ? void 0 : _user3._id) ? {\n              border: '#82e0aa 3px solid'\n            } : {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 19\n          }, this), !((_user4 = user) !== null && _user4 !== void 0 && _user4.profilePic) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: IsSelectedChat(user) ? \"user-selected-avatar\" : \"user-default-avatar\",\n            style: onlineUser !== null && onlineUser !== void 0 && onlineUser.includes((_user5 = user) === null || _user5 === void 0 ? void 0 : _user5._id) ? {\n              border: '#82e0aa 3px solid'\n            } : {},\n            children: ((_user6 = user) === null || _user6 === void 0 ? void 0 : (_user6$firstname = _user6.firstname) === null || _user6$firstname === void 0 ? void 0 : (_user6$firstname$char = _user6$firstname.charAt(0)) === null || _user6$firstname$char === void 0 ? void 0 : _user6$firstname$char.toUpperCase()) + ((_user7 = user) === null || _user7 === void 0 ? void 0 : (_user7$lastname = _user7.lastname) === null || _user7$lastname === void 0 ? void 0 : (_user7$lastname$charA = _user7$lastname.charAt(0)) === null || _user7$lastname$charA === void 0 ? void 0 : _user7$lastname$charA.toUpperCase())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-user-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-display-name\",\n              children: formatName(user)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-display-email\",\n              children: getlastMessage(user._id) || user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [getUnreadMessageCount(user._id), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"last-message-timestamp\",\n              children: getLastMessageTimeStamp(user._id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), !(allChats !== null && allChats !== void 0 && allChats.find(chat => {\n            var _chat$members6;\n            return chat === null || chat === void 0 ? void 0 : (_chat$members6 = chat.members) === null || _chat$members6 === void 0 ? void 0 : _chat$members6.map(m => m._id).includes(user._id);\n          })) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-start-chat\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"user-start-chat-btn\",\n              onClick: () => startNewChat(user._id),\n              children: \"Start Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this)\n    }, user._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }, this);\n  });\n}\n_s(UsersList, \"R5LkaO0KwFeO7HGWaqxGXiBf5xo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = UsersList;\nexport default UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["toast","useDispatch","useSelector","createNewChat","hideLoader","showLoader","setAllChats","setSelectedChat","moment","useEffect","store","jsxDEV","_jsxDEV","UsersList","searchKey","socket","onlineUser","_s","allUsers","allChats","user","currentUser","selectedChat","state","userReducer","dispatch","startNewChat","searchedUserId","response","_id","success","message","newChat","data","updatedChat","error","_response","openChat","selectedUserId","chat","find","_chat$members","_chat$members2","members","map","m","includes","IsSelectedChat","_selectedChat$members","getLastMessageTimeStamp","userId","_chat$members3","lastMessage","_chat$lastMessage","createdAt","format","getlastMessage","_chat$members4","_chat$lastMessage2","_chat$lastMessage3","_chat$lastMessage3$te","msgPrefix","sender","text","substring","formatName","_user$lastname","_user$lastname$at","_user$lastname2","_user$lastname2$slice","firstname","fname","at","toUpperCase","slice","toLowerCase","lname","lastname","off","on","_allChats","_allChats2","getState","chatId","updatedchats","unreadMessageCount","latestChat","otherChats","filter","Boolean","getUnreadMessageCount","_chat$lastMessage4","_chat$members5","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getData","_user$firstname","_user$lastname3","obj","_user","_user2","_user3","_user4","_user5","_user6","_user6$firstname","_user6$firstname$char","_user7","_user7$lastname","_user7$lastname$charA","mem","onClick","profilePic","src","alt","style","border","charAt","email","_chat$members6","_c","$RefreshReg$"],"sources":["C:/Users/adars/MASTERCSS/quick-chat-app/client/src/pages/home/components/userList.js"],"sourcesContent":["import toast from \"react-hot-toast\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNewChat } from './../../../apiCalls/chat';\r\nimport { hideLoader, showLoader } from \"../../../redux/loaderSlice\";\r\nimport { setAllChats, setSelectedChat } from './../../../redux/usersSlice';\r\nimport moment from \"moment\";\r\nimport { useEffect } from \"react\";\r\nimport store from \"../../../redux/store\";\r\n\r\nfunction UsersList({searchKey, socket, onlineUser}) {\r\n  const { allUsers, allChats, user: currentUser, selectedChat } = useSelector(state => state.userReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  const startNewChat = async (searchedUserId) => {\r\n    let response = null;\r\n    try {\r\n      dispatch(showLoader());\r\n      response = await createNewChat([currentUser._id, searchedUserId]);\r\n      dispatch(hideLoader());\r\n\r\n      if (response.success) {\r\n        toast.success(response.message);\r\n        const newChat = response.data;\r\n        const updatedChat = [...allChats, newChat];\r\n        dispatch(setAllChats(updatedChat));\r\n        dispatch(setSelectedChat(newChat));\r\n      }\r\n    } catch (error) {\r\n      toast.error(response?.message || \"Something went wrong\");\r\n      dispatch(hideLoader());\r\n    }\r\n  };\r\n\r\n  const openChat = (selectedUserId) => {\r\n    const chat = allChats?.find(chat =>\r\n      chat?.members?.map(m => m._id).includes(currentUser._id) &&\r\n      chat?.members?.map(m => m._id).includes(selectedUserId)\r\n    );\r\n\r\n    if (chat) {\r\n      dispatch(setSelectedChat(chat));\r\n    }\r\n  };\r\n\r\n  const IsSelectedChat = (user) => {\r\n    if (selectedChat) {\r\n      return selectedChat?.members?.map(m => m._id).includes(user?._id);\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const getLastMessageTimeStamp = (userId) => {\r\n    const chat = allChats?.find(chat => chat?.members?.map(m => m._id).includes(userId));\r\n    if (!chat || !chat?.lastMessage) {\r\n      return \"\";\r\n    } else {\r\n      return moment(chat?.lastMessage?.createdAt).format('hh:mm A');\r\n    }\r\n  };\r\n\r\n  const getlastMessage = (userId) => {\r\n    const chat = allChats?.find(chat => chat?.members?.map(m => m._id).includes(userId));\r\n    if (!chat || !chat.lastMessage) {\r\n      return \"\";\r\n    } else {\r\n      const msgPrefix = chat?.lastMessage?.sender === currentUser._id ? \"You: \" : \"\";\r\n      return msgPrefix + chat?.lastMessage?.text?.substring(0, 25);\r\n    }\r\n  };\r\n\r\n  function formatName(user) {\r\n    if (!user || !user.firstname) return \"\";\r\n    let fname = user.firstname.at(0).toUpperCase() + user.firstname.slice(1).toLowerCase();\r\n    let lname = user.lastname?.at(0)?.toUpperCase() + user.lastname?.slice(1)?.toLowerCase();\r\n    return fname + ' ' + (lname || '');\r\n  }\r\n\r\n  useEffect(() => {\r\n    socket.off('set-message-count').on('set-message-count', (message) => {\r\n      const selectedChat = store.getState().userReducer.selectedChat;\r\n      let allChats = store.getState().userReducer.allChats;\r\n\r\n      if (selectedChat?._id !== message.chatId) {\r\n        const updatedchats = allChats.map(chat => {\r\n          if (chat?._id === message.chatId) {\r\n            return {\r\n              ...chat,\r\n              unreadMessageCount: (chat?.unreadMessageCount || 0) + 1,\r\n              lastMessage: message\r\n            };\r\n          }\r\n          return chat;\r\n        });\r\n        allChats = updatedchats;\r\n      }\r\n\r\n      const latestChat = allChats?.find(chat => chat?._id === message.chatId);\r\n      const otherChats = allChats?.filter(chat => chat?._id !== message.chatId);\r\n      allChats = [latestChat, ...otherChats].filter(Boolean);\r\n      dispatch(setAllChats(allChats));\r\n    });\r\n  }, []);\r\n\r\n  const getUnreadMessageCount = (userId) => {\r\n    const chat = allChats?.find(chat =>\r\n      chat?.members?.map(m => m._id).includes(userId)\r\n    );\r\n\r\n    if (chat && chat.unreadMessageCount && chat.lastMessage?.sender !== currentUser._id) {\r\n      return <div className=\"unread-message-counter\"> {chat.unreadMessageCount} </div>;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  function getData() {\r\n    if (searchKey === \"\") {\r\n      return allChats || [];\r\n    } else {\r\n      return allUsers?.filter(user => {\r\n        return user?.firstname?.toLowerCase().includes(searchKey?.toLowerCase()) ||\r\n          user?.lastname?.toLowerCase().includes(searchKey?.toLowerCase());\r\n      }) || [];\r\n    }\r\n  }\r\n\r\n  return (\r\n    getData()\r\n      .map(obj => {\r\n        let user = obj;\r\n        if (obj?.members) {\r\n          user = obj.members.find(mem => mem._id !== currentUser._id);\r\n        }\r\n\r\n        if (!user) return null;\r\n\r\n        return (\r\n          <div className=\"user-search-filter\" onClick={() => openChat(user._id)} key={user._id}>\r\n            <div className={IsSelectedChat(user) ? \"selected-user\" : \"filtered-user\"}>\r\n              <div className=\"filter-user-display\">\r\n                {user?.profilePic && (\r\n                  <img\r\n                    src={user?.profilePic}\r\n                    alt=\"Profile Pic\"\r\n                    className=\"user-profile-image\"\r\n                    style={onlineUser?.includes(user?._id) ? { border: '#82e0aa 3px solid' } : {}}\r\n                  />\r\n                )}\r\n\r\n                {!user?.profilePic && (\r\n                  <div\r\n                    className={IsSelectedChat(user) ? \"user-selected-avatar\" : \"user-default-avatar\"}\r\n                    style={onlineUser?.includes(user?._id) ? { border: '#82e0aa 3px solid' } : {}}\r\n                  >\r\n                    {user?.firstname?.charAt(0)?.toUpperCase() + user?.lastname?.charAt(0)?.toUpperCase()}\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"filter-user-details\">\r\n                  <div className=\"user-display-name\">{formatName(user)}</div>\r\n                  <div className=\"user-display-email\">{getlastMessage(user._id) || user.email}</div>\r\n                </div>\r\n                <div>\r\n                  {getUnreadMessageCount(user._id)}\r\n                  <div className=\"last-message-timestamp\">{getLastMessageTimeStamp(user._id)}</div>\r\n                </div>\r\n\r\n                {!allChats?.find(chat => chat?.members?.map(m => m._id).includes(user._id)) && (\r\n                  <div className=\"user-start-chat\">\r\n                    <button className=\"user-start-chat-btn\" onClick={() => startNewChat(user._id)}>\r\n                      Start Chat\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })\r\n  );\r\n}\r\n\r\nexport default UsersList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}