{"ast":null,"code":"import { axiosInstance, url } from './index';\n\n// Get all chats\nexport const getAllChats = async () => {\n  try {\n    const response = await axiosInstance.get(`${url}/api/chat/get-all-chats`);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error(\"Error fetching chats:\", error);\n    return ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n      success: false,\n      message: 'Failed to fetch chats'\n    };\n  }\n};\n\n// Create new chat\nexport const createNewChat = async members => {\n  try {\n    const response = await axiosInstance.post(`${url}/api/chat/create-new-chat`, {\n      members\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error(\"Error creating chat:\", error);\n    return ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n      success: false,\n      message: 'Failed to create chat'\n    };\n  }\n};\n\n// Clear unread message count\nexport const clearUnreadMessageCount = async chatId => {\n  try {\n    const response = await axiosInstance.post(`${url}/api/chat/clear-unread-message`, {\n      chatId\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    console.error(\"Error clearing unread count:\", error);\n    return ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || {\n      success: false,\n      message: 'Failed to clear unread messages'\n    };\n  }\n};","map":{"version":3,"names":["axiosInstance","url","getAllChats","response","get","data","error","_error$response","console","success","message","createNewChat","members","post","_error$response2","clearUnreadMessageCount","chatId","_error$response3"],"sources":["C:/Users/adars/MASTERCSS/quick-chat-app/client/src/apiCalls/chat.js"],"sourcesContent":["import { axiosInstance, url } from './index';\r\n\r\n// Get all chats\r\nexport const getAllChats = async () => {\r\n  try {\r\n    const response = await axiosInstance.get(`${url}/api/chat/get-all-chats`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching chats:\", error);\r\n    return error.response?.data || { success: false, message: 'Failed to fetch chats' };\r\n  }\r\n};\r\n\r\n// Create new chat\r\nexport const createNewChat = async (members) => {\r\n  try {\r\n    const response = await axiosInstance.post(`${url}/api/chat/create-new-chat`, { members });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error creating chat:\", error);\r\n    return error.response?.data || { success: false, message: 'Failed to create chat' };\r\n  }\r\n};\r\n\r\n// Clear unread message count\r\nexport const clearUnreadMessageCount = async (chatId) => {\r\n  try {\r\n    const response = await axiosInstance.post(`${url}/api/chat/clear-unread-message`, { chatId });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error clearing unread count:\", error);\r\n    return error.response?.data || { success: false, message: 'Failed to clear unread messages' };\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,GAAG,QAAQ,SAAS;;AAE5C;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,aAAa,CAACI,GAAG,CAAC,GAAGH,GAAG,yBAAyB,CAAC;IACzE,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACdC,OAAO,CAACF,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO,EAAAC,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAI;MAAEI,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAwB,CAAC;EACrF;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,OAAO,IAAK;EAC9C,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMH,aAAa,CAACa,IAAI,CAAC,GAAGZ,GAAG,2BAA2B,EAAE;MAAEW;IAAQ,CAAC,CAAC;IACzF,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAQ,gBAAA;IACdN,OAAO,CAACF,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,EAAAQ,gBAAA,GAAAR,KAAK,CAACH,QAAQ,cAAAW,gBAAA,uBAAdA,gBAAA,CAAgBT,IAAI,KAAI;MAAEI,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAwB,CAAC;EACrF;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,uBAAuB,GAAG,MAAOC,MAAM,IAAK;EACvD,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMH,aAAa,CAACa,IAAI,CAAC,GAAGZ,GAAG,gCAAgC,EAAE;MAAEe;IAAO,CAAC,CAAC;IAC7F,OAAOb,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAW,gBAAA;IACdT,OAAO,CAACF,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,EAAAW,gBAAA,GAAAX,KAAK,CAACH,QAAQ,cAAAc,gBAAA,uBAAdA,gBAAA,CAAgBZ,IAAI,KAAI;MAAEI,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAkC,CAAC;EAC/F;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}