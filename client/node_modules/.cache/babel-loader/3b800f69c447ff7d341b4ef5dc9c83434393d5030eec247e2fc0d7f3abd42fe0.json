{"ast":null,"code":"import { axiosInstance } from './index';\nexport const signupUser = async user => {\n  try {\n    const response = await axiosInstance.post('/api/auth/signup', user);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    return ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n      success: false,\n      message: 'Signup failed'\n    };\n  }\n};\nexport const loginUser = async user => {\n  try {\n    var _response$data;\n    console.log(\"ðŸŸ¢ Login request sent\");\n    const response = await axiosInstance.post('/api/auth/login', user);\n\n    // Save token immediately if backend sends it\n    if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.log(\"ðŸ”´ Login error:\", error);\n    return ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n      success: false,\n      message: 'Login failed'\n    };\n  }\n};","map":{"version":3,"names":["axiosInstance","signupUser","user","response","post","data","error","_error$response","success","message","loginUser","_response$data","console","log","token","localStorage","setItem","_error$response2"],"sources":["C:/Users/adars/MASTERCSS/quick-chat-app/client/src/apiCalls/auth.js"],"sourcesContent":["import { axiosInstance } from './index';\r\n\r\nexport const signupUser = async (user) => {\r\n  try {\r\n    const response = await axiosInstance.post('/api/auth/signup', user);\r\n    return response.data;\r\n  } catch (error) {\r\n    return error.response?.data || { success: false, message: 'Signup failed' };\r\n  }\r\n};\r\n\r\nexport const loginUser = async (user) => {\r\n  try {\r\n    console.log(\"ðŸŸ¢ Login request sent\");\r\n    const response = await axiosInstance.post('/api/auth/login', user);\r\n\r\n    // Save token immediately if backend sends it\r\n    if (response.data?.token) {\r\n      localStorage.setItem('token', response.data.token);\r\n    }\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(\"ðŸ”´ Login error:\", error);\r\n    return error.response?.data || { success: false, message: 'Login failed' };\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,SAAS;AAEvC,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAI,IAAK;EACxC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,aAAa,CAACI,IAAI,CAAC,kBAAkB,EAAEF,IAAI,CAAC;IACnE,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACd,OAAO,EAAAA,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAI;MAAEG,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAgB,CAAC;EAC7E;AACF,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAOR,IAAI,IAAK;EACvC,IAAI;IAAA,IAAAS,cAAA;IACFC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC,MAAMV,QAAQ,GAAG,MAAMH,aAAa,CAACI,IAAI,CAAC,iBAAiB,EAAEF,IAAI,CAAC;;IAElE;IACA,KAAAS,cAAA,GAAIR,QAAQ,CAACE,IAAI,cAAAM,cAAA,eAAbA,cAAA,CAAeG,KAAK,EAAE;MACxBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEb,QAAQ,CAACE,IAAI,CAACS,KAAK,CAAC;IACpD;IAEA,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAW,gBAAA;IACdL,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEP,KAAK,CAAC;IACrC,OAAO,EAAAW,gBAAA,GAAAX,KAAK,CAACH,QAAQ,cAAAc,gBAAA,uBAAdA,gBAAA,CAAgBZ,IAAI,KAAI;MAAEG,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAe,CAAC;EAC5E;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}